version: '3'
services:

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    tty: true
    image: frontend/website:0.0.1
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - frontend

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:5000 app:app
    ports:
      - "5000:5000"
    container_name: flask
    image: backend/flask-python:3.6
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5000
      MONGODB_DATABASE: testdb
      MONGODB_USERNAME: user
      MONGODB_PASSWORD: password
      MONGODB_HOSTNAME: mongodb
    volumes:
      - appdata:/var/www/
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend

  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: testdb
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local